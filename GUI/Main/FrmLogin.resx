<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAFAAAABQCAYAAACOEfKtAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxIAAAsSAdLdfvwAAAe6SURBVHhe7VtZbFRVGEYRo2hi3KKJmPiqifHBaCA++GDS
        uSwJJkI0+oD6AMYICXRokQADxS3RsnWWztLCDGKxQmyhy0xncNq5AwidYqeppXSBbmmRlhakQFtsj/9/
        7rltY84Iw2z3ztwv+ZKmnTnn+797lv/853aOBg0aSktXzvU6dItqbLrNHptw1GPT/Vlj1w177MIEEn+u
        sQvN+Df8TI1NWGgwGB5kX89cuIuzXvTYdd8B+8AgEh11vWD0t1U2YQFrLnNQVSQ8CwZYYTSNy4aIJSvI
        +d/WkYHwTvL3xX1k4rKDTA05KfFn/N1AOI+0nFhLxJ9WzBgJbcAotfity55hzac3vPasD2EKXsXgvY7F
        pMn9GRlp30XI8MEo6KLfaXKvoW1gWzC9hzxW4QPWTfohZH19HgRpl0dOQ/knZLTHxDEnOo52m0io/ONZ
        I1IoxL5Yt+mBY9Zl82HKVmGAvuIlpK/BwDUjFvaGthFf0VI2GnWV2CfrXt3A0SCbV+tcTq537uUaEA9e
        69xN/NCHZKJQkRYjUZ62aN5ot5EbeDyJU3raRNhcmAx1wm0TPsJAcNomcuT9l9c69kxPZ7d98ftMjrpA
        UxW22yZizbsbcU2URqFu0Ot852kmSz2geR4EgLstL8BkMFS+ipoIWkxMljqAJwxMcDFHi0eqcr/ENVfK
        E3Vjqjqx4PEMnzwmybzAkslw9RppKsOxj8lTNvCQD0+8F0Vf69jNDSqZHG7Ll9fCPixaMJnKBa2qgGA8
        2+KRixdUcumCs/N71ES3PetNJlO5oOUmEIuFAX5AyWeLby010GsXNjGZygWt2YFYrKrwgkkF+xt3UgNh
        afmFyVQuQGgzisXyEy+YVPB65x55HWxiMpULOXnGGh4vmFRwfMAhGzjIZCoXcpF0csjJDSYVnBx0ylN4
        jMlULjQDY4Q2hWMECNU2kVgwk8bkcYNJBfsb8+QprII0hiXSeHvGCyYVbPF9IRloE3KZTOUCRC5EsXj1
        qJSjXOCQdJTzWoU3mEzlghYTbEIPCo7+ujL+nCkmCN2qeZsBS0coGu9teUElk+Gq1fL0/YbJUz6weDld
        UO1OXUH1RlcB8Tqk/M9nWfoCk6cO4I0YPnm89OYFl3i6SH2ZVNKHzKCAyVIP8F0VED6EAeAFDz/IxLGn
        fguburorbnvWU0yWuoDvqmAQeMWIl968QBNBrIT7ipZIBjqElUyOOgGLdyEGgpfdyVgPb3QZif+AdLEO
        NDIZ6oX0UpGuUjYRL715gceDOPJmmXfcb3j7ISZD3cAXfWQTcTrHf0100TVvetqCeWnzcpEMOhLZzozE
        S+94vCuDqYq82zIa02bk8YDvqmBZCYPFHK2peg0ZacMTSzTHPhc9YWCSLOV5QNhtVb9h3CvwXRVIbk2Y
        4MojB8/OeHuGF0BYfsJ6IhZlkRMDDvo7rKpgYUC+ppSoG8M8T7WpSizA0wE99rGzc1TE78DxTHUnjEQA
        D/l46Y33tlizw8InmHOVXg9QClfB6DD+DX7OxaqK9m8OGjRo0KBBgwYNGtIeBmto/gZT4N1sU7BIbxL7
        9OYgSQSzzWIv7cMYXI59su7VCYOBPLjBfFIHQR3Wm8VbvIATS+jTJJboTcEs1MJkKR85e39fAKJ3QhA9
        cjAbgV8fDpNisY9UXBgldZcJCcSZ2Ca2XRzoI1+VNNI+Z8wM9sDIzENtTKbykG0JvALGueCpT8jCDa4Q
        Dch9cYwbdCLpgT6LAr3E4AxNG5ltEsdB44Ec0+mXmezUI9dy+qVsc9AJwv5BkRstJ0l++XlytGkkISMt
        WtYNEHIkPELyy85TbdRM1ApGonYWRvJhKG1+GNa3XJgat6koS5DsKm8l1R23uIEogTgqjdUd00aidhiV
        2w37/Y+wsJIDvSXwFnTcQUccEJ9uZdtNrmglsuLCTfJDWcusdVJs1xcGF7HwEoeVpaVz4altgyl7Bzve
        cfAc+bX5OlekGlgG2re7GqTRSGMSt2KMLNz44nOj/3HooII+MZiu1hNdpHZgiitMTaztnyRWX9fsXftY
        9veex1jY8YHe6H8enlADdrC56Aw5CosyT4yaeaRxmGx2nJFGo0msX2c//RwLPzbkWkNPwGbxBza8DVIC
        JW8SsbK68zakXtKUhtnWtMksPslsuD+szz/1KKx5QWxwx4/nSE33BLfjdKK3a5yu7WwkBmLaocE8Iza0
        pfgs8VxKfjKcKnoujZOt++ulkWgS9zI7ogNM28Xw5amcwlPkeOsot6N05vHWG1K+CB5A0p3FbLk3rLaG
        5sEa0IVPoBiOQ7wOMoGO2l62HgY7DQb/vb8ustEsfopfxHWvLg1SlftlXf8U2X5QzhPFVcyeu4CQB2Dt
        a8MvldRf4TacSTx09i95Q2llDv0/1lvE1/ALW/efpU+A12gmET3YAl6gJ+sLTr3KbIoMcPpL/HBBdTu3
        wUzkvsp2aS00BXOYTZEBu44bP/xzwxC3sUzk4YZB2cAqZlNkwJGtGT9c2a6e6kqiidUbaiCcTphNkQEu
        D+KHT/Tc4TaWifTBCQw9gcF1hdkUGbBdT+KHsZLLaywTiV5IBoqTzKbIkIZqkNtQJlP2hdkUGZqBfGoG
        xsioDdTIJ7MpMnhf0jhDZpMGDYrAnDn/AnXNi16+1wjUAAAAAElFTkSuQmCC
</value>
  </data>
</root>